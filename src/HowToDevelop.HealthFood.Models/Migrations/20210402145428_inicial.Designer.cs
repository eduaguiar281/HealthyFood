// <auto-generated />
using System;
using HowToDevelop.HealthFood.Infraestrutura;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HowToDevelop.HealthFood.Dominio.Migrations
{
    [DbContext(typeof(HealthFoodDbContext))]
    [Migration("20210402145428_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HowToDevelop.HealthFood.Infraestrutura.Garcons.Garcom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apelido")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Garcons");
                });

            modelBuilder.Entity("HowToDevelop.HealthFood.Infraestrutura.Garcons.SetorAtendimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GarcomId")
                        .HasColumnType("int");

                    b.Property<int>("SetorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GarcomId");

                    b.HasIndex("SetorId");

                    b.ToTable("SetoresAtendimento");
                });

            modelBuilder.Entity("HowToDevelop.HealthFood.Infraestrutura.Pedidos.ItensPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalItem")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ItensPedido");
                });

            modelBuilder.Entity("HowToDevelop.HealthFood.Infraestrutura.Pedidos.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("GarcomId")
                        .HasColumnType("int");

                    b.Property<int>("MesaId")
                        .HasColumnType("int");

                    b.Property<string>("NomeCliente")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Status");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("GarcomId");

                    b.HasIndex("MesaId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("HowToDevelop.HealthFood.Infraestrutura.Produtos.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoBarras")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<decimal?>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoProduto")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("TipoProduto");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("HowToDevelop.HealthFood.Setores.Mesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("Numeracao")
                        .HasColumnType("int");

                    b.Property<int?>("SetorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SetorId");

                    b.ToTable("Mesas");
                });

            modelBuilder.Entity("HowToDevelop.HealthFood.Setores.Setor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sigla")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Setores");
                });

            modelBuilder.Entity("HowToDevelop.HealthFood.Infraestrutura.Garcons.SetorAtendimento", b =>
                {
                    b.HasOne("HowToDevelop.HealthFood.Infraestrutura.Garcons.Garcom", null)
                        .WithMany("SetoresAtendimento")
                        .HasForeignKey("GarcomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HowToDevelop.HealthFood.Setores.Setor", null)
                        .WithMany()
                        .HasForeignKey("SetorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HowToDevelop.HealthFood.Infraestrutura.Pedidos.ItensPedido", b =>
                {
                    b.HasOne("HowToDevelop.HealthFood.Infraestrutura.Pedidos.Pedido", null)
                        .WithMany("Itens")
                        .HasForeignKey("PedidoId");

                    b.HasOne("HowToDevelop.HealthFood.Infraestrutura.Produtos.Produto", null)
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HowToDevelop.HealthFood.Infraestrutura.Pedidos.Pedido", b =>
                {
                    b.HasOne("HowToDevelop.HealthFood.Infraestrutura.Garcons.Garcom", null)
                        .WithMany()
                        .HasForeignKey("GarcomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HowToDevelop.HealthFood.Setores.Mesa", null)
                        .WithMany()
                        .HasForeignKey("MesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("HowToDevelop.HealthFood.Infraestrutura.Pedidos.ObjetosDeValor.Comissao", "Comissao", b1 =>
                        {
                            b1.Property<int>("PedidoId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<decimal>("BaseCalculo")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("ComissaoBaseCalculo");

                            b1.Property<decimal>("Gorjeta")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("ComissaoGorjeta");

                            b1.Property<decimal?>("Percentual")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("ComissaoPercentual");

                            b1.Property<decimal?>("Total")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("ComissaoTotal");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("ComissaoValor");

                            b1.HasKey("PedidoId");

                            b1.ToTable("Pedidos");

                            b1.WithOwner()
                                .HasForeignKey("PedidoId");
                        });

                    b.OwnsOne("HowToDevelop.HealthFood.Infraestrutura.Pedidos.ObjetosDeValor.Desconto", "Desconto", b1 =>
                        {
                            b1.Property<int>("PedidoId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<decimal>("BaseCalculo")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("DescontoBaseCalculo");

                            b1.Property<decimal?>("Percentual")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("DescontoPercentual");

                            b1.Property<string>("TipoDescontoPedido")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("nvarchar(40)")
                                .HasColumnName("DescontoTipo");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("DescontoValor");

                            b1.HasKey("PedidoId");

                            b1.ToTable("Pedidos");

                            b1.WithOwner()
                                .HasForeignKey("PedidoId");
                        });

                    b.Navigation("Comissao");

                    b.Navigation("Desconto");
                });

            modelBuilder.Entity("HowToDevelop.HealthFood.Setores.Mesa", b =>
                {
                    b.HasOne("HowToDevelop.HealthFood.Setores.Setor", null)
                        .WithMany("Mesas")
                        .HasForeignKey("SetorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HowToDevelop.HealthFood.Infraestrutura.Garcons.Garcom", b =>
                {
                    b.Navigation("SetoresAtendimento");
                });

            modelBuilder.Entity("HowToDevelop.HealthFood.Infraestrutura.Pedidos.Pedido", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("HowToDevelop.HealthFood.Setores.Setor", b =>
                {
                    b.Navigation("Mesas");
                });
#pragma warning restore 612, 618
        }
    }
}
